<!-- hello.handlebars -->

<html lang="en">

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta charset="utf-8">
  <meta name="description" content="FlyTED2 results page">
  <meta name="author" content="Benedict Uttley, Cardiff University, Biosciences">
  <title>SEARCH</title>

  <!--Load jquery-->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
    crossorigin="anonymous"></script>
  <!-- Load the Bootstrap js files -->
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/js/bootstrap.min.js"
    integrity="sha384-o+RDsa0aLu++PJvFqy8fFScvbHFLtbvScb8AjopnFD+iEQ7wo/CG0xlczd+2O/em"
    crossorigin="anonymous"></script>
  <!--Load the API for google charts -->
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <!-- Load the Bootstrap css files -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/css/bootstrap.min.css"
    integrity="sha384-Smlep5jCw/wG7hdkwQ/Z5nLIefveQRIY9nfy6xoR1uRYBtpZgI6339F5dgvm/e9B"
    crossorigin="anonymous">

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.3.5/jquery.fancybox.min.css"
  />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.3.5/jquery.fancybox.min.js"></script>
  <!-- TODO: Create external stylesheets -->

  <!-- Collapsable tab displaying tissue expression chart styling -->
  <style>
  .tab {
    margin-top: 8px;
    width: 100%;
    background-color: gray;
    color: white;
    cursor: pointer;
    padding: 5px;
    height: auto;
  }

  .tab:hover {
    background-color: #ccc;
  }
  </style>

  <!--TODO: Change the class name and find a more suitable table design that is reposndive to changes in window size and can have search functionality added to it. -->

  <style>
  table.table-bordered>tbody>tr>td {
    border: 1px solid black
  }

  .customers {
    position: relative;
    font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
    border-collapse: collapse;
    width: 100%;
  }

  .customers td,
  .customers th {
    border: 2px solid black;
    padding: 8px;
    color: black;
    background-color: white;
  }

  .customers tr:hover {
    background-color: #ddd;
  }

  .customers th {
    padding-top: 12px;
    padding-bottom: 12px;
    text-align: left;
    background-color: #d4374a;
    color: white;
  }

  .customersTwo {
    font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
    border-collapse: collapse;
    width: 100%;
  }

  .customersTwo td,
  .customersTwo th {
    border: 1px solid #ddd;
    padding: 8px;
  }

  .customersTwo tr:hover {
    background-color: #ddd;
  }

  .customersTwo th {
    padding-top: 12px;
    padding-bottom: 12px;
    text-align: left;
    background-color: #4CAF50;
    color: white;
  }

  .qbox {
    position: fixed;
    top: 20px;
    right: 50px;
  }

  .sidenav {
    top: 25%;
    height: 50%;
    width: 250px;
    position: fixed;
    z-index: 100;
    left: 0;
    overflow-x: hidden;
    transition: 0.5s;
    padding-top: 60px;
    background-color: gray;
    border-top: 2px solid black;
    border-bottom: 2px solid black;
    border-right: 2px solid black;
  }

  .sidenav a {
    padding: 8px 8px 8px 32px;
    text-decoration: none;
    font-size: 25px;
    color: #818181;
    display: block;
    transition: 0.3s;
  }

  .sidenav a:hover {
    color: #f1f1f1;
  }

  .sidenav .closebtn {
    position: absolute;
    top: 0;
    right: 25px;
    font-size: 36px;
    margin-left: 50px;
    cursor: pointer;
  }

  @media screen and (max-height: 450px) {
    .sidenav {
      padding-top: 15px;
    }
    .sidenav a {
      font-size: 18px;
    }
  }

  .Up {
    border: solid green;
    border-width: 0 3px 3px 0;
    display: inline-block;
    padding: 3px;
    transform: rotate(-135deg);
    -webkit-transform: rotate(-135deg);
  }

  .Down {
    border: solid red;
    border-width: 0 3px 3px 0;
    display: inline-block;
    padding: 3px;
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
  }

  .content {
    position: relative;
    height: 100%;
    width: 100%;
    padding: 5%;
  }

  .flytedContainer {
    padding: 5px;
    width: 100%;
    height: 75%;
    background-color: #d4374a;
  }

  .image {
    position: relative;
    float: left;
    width: 50%;
    height: 100%;
    background-color: yellow;
    border: 2px solid black;
  }

  .annotation {
    position: relative;
    float: right;
    width: 50%;
    height: 100%;
    color: white;
  }

  .key {
    font-weight: bold;
  }

  .form-control:focus {
    border-color: #d4374a;
    box-shadow: 0px 1px 1px #d4374a inset, 0px 0px 8px #d4374a;
  }

  .square {
    position: relative;
    width: 100%;
    border: 3px solid black;
    height: 40%;
  }

  .square:after {
    content: "";
    display: block;
    padding-bottom: 40%;
  }

  .contenta {
    position: absolute;
    width: 50%;
    height: 100%;
    right: 0%;
  }

  .contentb {
    position: absolute;
    width: 50%;
    height: 100%;
    left: 0%;
  }
  /**************************
  DEFAULT BOOTSTRAP STYLES
**************************/

  .btn {
    display: inline-block;
    padding: 6px 12px;
    margin-bottom: 0;
    font-size: 14px;
    font-weight: normal;
    line-height: 1.42857143;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
    padding: 10px 16px;
  }

  .btn-lg {
    font-size: 18px;
    line-height: 1.33;
    border-radius: 6px;
  }

  .btn-primary {
    color: white;
    background-color: white;
    border-color: white;
  }

  .btn-primary:hover,
  .btn-primary:focus,
  .btn-primary:active,
  .btn-primary.active,
  .open .dropdown-toggle.btn-primary {
    color: white;
    background-color: white;
    border-color: white;
  }
  /***********************
  SHARP BUTTONS
************************/

  .sharp {
    border-radius: 0;
  }
  /***********************
  CUSTON BTN VALUES
************************/

  .btn {
    padding: 14px 24px;
    border: 0 none;
    font-weight: 700;
    letter-spacing: 1px;
    text-transform: uppercase;
    outline: none !important;
  }

  .btn:focus,
  .btn:active:focus,
  .btn.active:focus {
    outline: none !important;
  }

  .btn {
    background: white;
    color: #d4374a;
    outline: none !important;
  }

  .btn:hover,
  .btn-primary:focus,
  .btn-primary:active,
  .btn-primary.active,
  .open>.dropdown-toggle.btn-primary {
    background: #d4374a;
    color: white;
    outline: none !important;
  }

  .btn:active,
  .btn.active {
    outline: none !important;
    background: black;
    box-shadow: none;
  }

  .btn:focus {
    outline: none !important;
  }

  .btn-link {
    padding: 14px 24px;
    border: 0 none;
    font-weight: 700;
    letter-spacing: 1px;
    text-transform: uppercase;
    outline: none !important;
    color: #d4374a;
  }

  .btn-link:hover {
    color: #d4374a;
  }

  .btn:focus,
  .btn:active {
    outline: none !important;
    box-shadow: none !important;
  }
  </style>

</head>

<body>
  <!--Side bar containing query bulder form -->
  <div id="mySidenav" class="sidenav">
    <div class="container">
      <a class="closebtn" onclick="closeNav()" style="color: white" onclick="toggleSide()">&times</a>
      <br>
      <form class="form-horizontal" method="post" action="/probe_query">
        <h3>Query Builder</h3>
        <div class="form-group">
          <label class="control-label col-sm-2" style="color: white">GENE</label>
          <div class="col-sm-10">
            <input class="form-control" id="gene" name="Probe" placeholder="Enter gene(s)" data-toggle="tooltip"
              data-placement="left" title="Seperate multiple genes with commas.">
          </div>
        </div>
        <div class="form-group">
          <label class="control-label col-sm-2" style="color: white">VARIANT</label>
          <div class="col-sm-10">
            <input class="form-control" id="variant" name="Variant" placeholder="Enter Variant(s)"
              data-toggle="tooltip" data-placement="left" title="Seperate multiple genotypes with commas.">
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-lg sharp">EXECUTE</button>
          </div>
        </div>
      </form>
    </div>
  </div>

  <script>
  function toggleSide() { // Toggle side nav open or closed.
    let side = document.getElementById("mySidenav");
    if (side.style.width === "250px") {
      side.style.width = "0px" // Close the sidenav if it was previously open.
    } else {
      side.style.width = "250px" // Open the sidenav if it was previously closed.
      side.style.borderRight = "2px solid black";
    }
  }

  function closeNav() {
    document.getElementById("mySidenav").style.width = "0";
  }
  </script>

  <!--Top sticky navigation bar -->
  <nav class="navbar navbar-expand-sm navbar-dark bg-primary fixed-top" style="background-color: gray !important; border-bottom: 2px solid white">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText"
      aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarText">
      <ul class="nav navbar-nav mr-auto">
        <li class="nav-item">
          <h2 style="color: white">FlyTED2</h2>
        </li>
      </ul>
      <ul class="nav navbar-nav">
        <li class="nav-item">
          <button type="button" class="btn btn-lg sharp" onclick="toggleSide()">SEARCH</button>
        </li>
      </ul>
      <ul class="navbar-nav ml-auto">
        <li class="nav-item active">
          <a class="nav-link" href="index.html">Home</a>
          <span class="sr-only">(current)</span>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="about.html">About</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="credits.html">Credits</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="liscence_and_citing.html">Liscence and Citing</a>
        </li>
      </ul>
    </div>
  </nav>

  <script>
  var gene = "none";
  var data_array = [];
  </script>

  {{#each flyMineData}}
    <div class="content">
      <h1>Gene: {{[probe]}}</h1>
      <!-- Include link to the FlyBase page dedicated to the repsective gene -->
      <a href="http://flybase.org/reports/{{this.[tissue].[0].[9]}}" class="btn-link">Link To FlyBase Report For Gene</a>
      <br>

      {{#each [flyted]}}
        <div class="square">
          <a class="contenta" data-fancybox="gallery" href="{{[link to file]}}" style="background: url({{[link to file]}}); overflow: hidden; background-size: cover;  background-position: center"></a>

          <!-- Liscence for fancybox can be found on their site -> https://fancyapps.com/fancybox/3
          It is free to use fancyBox for your personal or non-profit website projects. This website is non-profit.
          fancybox is released under the GNU General Public License v3.0 -->

          <script>
          $("[data-fancybox]").fancybox({
            arrows: false,
            thumbs: {
              autoStart: true
            },
            buttons: [
              "close"
            ],
          });
          </script>

          {{#with this}}
            <!-- Table to show image annotations -->
            <div class="contentb" style="overflow:auto">
              <table class="table table-bordered" style="position: relative; width:100%; height:100%; margin:0px">
                <tbody>
                  <tr>
                    <td class="key">Probe</td>
                    <td>{{[probe]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Slide Name</td>
                    <td>{{[slide name]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Genotype A</td>
                    <td>{{[genotype a]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Genotype B</td>
                    <td>{{[genotype b]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Stages Shown</td>
                    <td>{{[stages shown in picture]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Description</td>
                    <td>{{[description of staining pattern]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Apical/spermatogonia</td>
                    <td>{{[Apical/spermatogonia]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Germ-line</td>
                    <td>{{[Germ-line]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Somatic</td>
                    <td>{{[Somatic]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Additional Comments</td>
                    <td>{{[comments]}}</td>
                  </tr>
                </tbody>
              </table>
            </div>


          {{/with}}
        </div>
        <br>
        <br>
      {{/each}}

      <div id="form" style="position:relative">
        <!-- NOTE: Could do filtering based on both name and expression count -->
        <!--Make and assign id for table and search, pass id into myFunction() -->
        <h3>Expression for Gene by tissue:</h3>
        <!-- Create elements with temporary id's -->
        <div class="form-inline">
          <label for="search">Search:</label>
          <input type="text" name="search" id="myInput" onkeyup="SearchTable(this.id)" placeholder="Search by Tissue"
            title="Filter Table" class="form-control" style="margin: 10px">
        </div>
        <div class="form-inline">
          <label style="margin:10px">Order:</label>
          <div class="btn-group btn-group-toggle" data-toggle="buttons">
            <label class="btn btn-lg sharp">
              <input type="radio" name="options" id="myButton_asc" autocomplete="off" onclick="sortTable(this.id, 'asc')"> Ascending
            </label>
            <label class="btn btn-lg sharp">
              <input type="radio" name="options" id="myButton_desc" autocomplete="off" onclick="sortTable(this.id, 'desc')"> Descending
            </label>
          </div>
        </div>
      </div>

      <br>

      <div style="position: relative; width: 100%; overflow: auto">
        <!-- Create table to contain the tissue expression results fetched through the flymine (intermine) API -->
        <table id="myTable" style="width: 100%" class="customers">

          <!-- Script to give the created table and related buttons id's so they can be referenced later -->
          <script>
          // Change input id to match respective gene:
          var tochange = document.getElementById('myInput');
          tochange.id = "{{[probe]}}" + "_input";

          // Change table id to match respective gene:
          var tochangetwo = document.getElementById('myTable');
          tochangetwo.id = "{{[probe]}}" + "_table";

          // Change button sort id to match respective gene:
          var tochangethree = document.getElementById('myButton_asc');
          tochangethree.id = "{{[probe]}}" + "_button_asc";
          $("#" + tochangethree.id).change(() => {
            sortTable('{{[probe]}}', 'asc');
          });

          // Change button sort id to match respective gene:
          var tochangefour = document.getElementById('myButton_desc');
          tochangefour.id = "{{[probe]}}" + "_button_desc";
          $("#" + tochangefour.id).change(() => {
            sortTable('{{[probe]}}', 'desc');
          });

          // Initially present table in ascending order.
          $(document).ready(function() {
            sortTable('{{[probe]}}', 'asc');
            tochangethree.click();

          });
          </script>

          <tr>
            <th>Gene Secondary Identifier</th>
            <th>Gene Symbol</th>
            <th>mRNA Signal</th>
            <th>mRNA Signal SEM</th>
            <th>Present Call</th>
            <th>Enrichment</th>
            <th>Affy Call</th>
            <th>Data Source</th>
            <th>Tissue Name</th>
          </tr>
          {{#with this}}

            <script>
            var tissue_expression_dataset = [];
            tissue_expression_dataset.push(["Tissue Type", "Expression Count"]);
            </script>
            {{#each [tissue]}}

              <script>
              gene = "{{this.[0]}}";
              var temp = [];
              var tissue_type = "{{this.[8]}}";
              var expression_level = parseFloat("{{this.[3]}}");
              temp.push(tissue_type, expression_level);
              tissue_expression_dataset.push(temp);
              </script>

              <tr>
                <td>{{this.[0]}}<i class= {{this.[6]}} style="float: right"></td> <!-- Add class which will be up or down, and this will display up/down arrow in relation to the rows affinity Property -->
        <td>{{this.[1]}}</td>
        <td>{{this.[2]}}</td>
        <td>{{this.[3]}}</td>
        <td>{{this.[4]}}</td>
        <td>{{this.[5]}}</td>
        <td>{{this.[6]}}</td>
        <td>{{this.[7]}}</td>
        <td>{{this.[8]}}</td>
      </tr>
      {{/each}}

      <script>
        data_array.push(gene);
        data_array.push(tissue_expression_dataset); // Push the gene name and the asscoiated expression data
      </script>
      {{/with}}
    </table>
  </div>
  <br>

<!--This script creates the elements for displaying the google chart, and assigns them id's based on the respective gene they are representing tissue expression data for -->
  <script>
    // Fetch previous table element:
    var items = document.querySelectorAll("div");
    var lastchild = items[items.length - 1];

    // Create button:
    var chart_button = document.createElement('div');
    var id = gene;
    chart_button.setAttribute("id", id);
    chart_button.classList.add('tab');
    chart_button.innerHTML = "View Tissue Expression Graph For Gene: " + gene;
    lastchild.parentNode.insertBefore(chart_button, lastchild.nextSibling);
    document.getElementById(id).onclick = function() {
      test(this.id);
    };

    // Create chart container:
    var chart_element = document.createElement('div');
    var id = "chart_" + gene;
    chart_element.setAttribute("id", id);
    chart_button.appendChild(chart_element);
  </script>
  </div>
  {{/each}}

  <script type="text/javascript">
    var mine = [];

    google.charts.load('current', {
      'packages': ['corechart']
    });
    google.charts.setOnLoadCallback(drawChart);

    // For each gene in the original query, draw the respective tissue expression graph
    function drawChart() {
      for (let i = 1; i < data_array.length; i = i + 2) {
        testing(data_array[i], data_array[i - 1]);
      }
    }

    // Form the Google charts API query to set parameters of the graph that is to be generated.
    function testing(data_array, gene) {
      var data = google.visualization.arrayToDataTable(data_array);

      var options = {
        legend: 'bottom',
        width: '100%',
        height: 800,
        title: 'Gene Expression in Different Drosopilla Tissues',
        colors: ['#d4374a'],

        hAxis: {
          title: 'Tissue Type',
          slantedText: true,
          slantedTextAngle: 90,
        },

        chartArea: {
          width: "82%",
          top: 28,
          height: '60%'
        },

        vAxis: {
          title: 'Expression (mRNA Signal SEM)',
          format: 'short',
          slantedText: true,
          slantedTextAngle: 90,
          sliceVisibilityThreshold: 0
        },
      };

      let id = "chart_" + gene;
      var container = document.getElementById(id)
      var chart = new google.visualization.ColumnChart(container);
      container.style.display = 'block';
      google.visualization.events.addListener(chart, 'ready', () => {
        container.style.display = 'none'
      });

      mine.push(gene, data, options);
      chart.draw(data, options);
    }

    // Toogle the display of the chart when the tab above the chart is clicked.
    function test(element) {
      var y = element.replace("chart_", "");
      var z = "chart_" + y;
      var x = document.getElementById(z);
      if (x.style.display === "none") {
        x.style.display = "block";
      } else {
        x.style.display = "none";
      }
    }

    // When window is resized, redraw every chart to fit the new window dimensions.
    function resize() {
      for (let i = 0; i < mine.length; i += 3) {
        let hidden_before = false;
        let thisChart = document.getElementById("chart_" + mine[i]);

        if (thisChart.style.display == "none") hidden_before = true;

        let chart = new google.visualization.ColumnChart(thisChart);
        thisChart.style.display = 'block';
        google.visualization.events.addListener(chart, 'ready', () => {
          if (hidden_before) thisChart.style.display = 'none'
        });
        chart.draw(mine[i + 1], mine[i + 2]);
      }
    }
    window.onload = resize;
    window.onresize = resize;
  </script>
  </div>
</div>

<!-- This script will filter rows matching the current user input -->
  <script>
    function SearchTable(id) {
      var table_id, input, filter, table, tr, td, i;
      input = document.getElementById(id);
      filter = input.value.toUpperCase();

      // Construct the table ID:
      table_id = id.replace('input', 'table');
      table = document.getElementById(table_id);
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[8];
        if (td) {
          if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
          } else {
            tr[i].style.display = "none";
          }
        }
      }
    }
  </script>

<!-- This script will sort the table in ascending or descending order of the expression level column, credit to w3c for the code snippet -->
  <script>
    function sortTable(gene, order) {
      var table, rows, switching, i, x, y, shouldSwitch;
      table = document.getElementById((gene + "_table"));
      switching = true;
      /*Make a loop that will continue until
      no switching has been done:*/
      while (switching) {
        //start by saying: no switching is done:
        switching = false;
        rows = table.getElementsByTagName("TR");
        /*Loop through all table rows (except the
        first, which contains table headers):*/
        for (i = 1; i < (rows.length - 1); i++) {
          //start by saying there should be no switching:
          shouldSwitch = false;
          /*Get the two elements you want to compare,
          one from current row and one from the next:*/
          x = rows[i].getElementsByTagName("TD")[3];
          y = rows[i + 1].getElementsByTagName("TD")[3];
          //check if the two rows should switch place:
          if ((order == 'asc') && (Number(x.innerHTML.toLowerCase()) < Number(y.innerHTML.toLowerCase())) ) {
            //if so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
          else if ((order == 'desc') && (Number(x.innerHTML.toLowerCase()) > Number(y.innerHTML.toLowerCase())) ) {
            //if so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
        }
        if (shouldSwitch) {
          /*If a switch has been marked, make the switch
          and mark that a switch has been done:*/
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
        }
      }
    }
  </script>

  </div>
</body>
</html>
