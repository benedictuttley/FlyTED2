<!-- results.handlebars V.1.2 -->

<html lang="en">

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta charset="utf-8">
  <meta name="description" content="FlyTED2 results page">
  <meta name="author" content="Benedict Uttley, Cardiff University, Biosciences">
  <title>RESULTS</title>

  <!--Load jquery-->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <!-- Load the Bootstrap js files -->
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/js/bootstrap.min.js" integrity="sha384-o+RDsa0aLu++PJvFqy8fFScvbHFLtbvScb8AjopnFD+iEQ7wo/CG0xlczd+2O/em" crossorigin="anonymous"></script>
  <!--Load the API for google charts -->
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <!-- Load the Bootstrap css files -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.2/css/bootstrap.min.css" integrity="sha384-Smlep5jCw/wG7hdkwQ/Z5nLIefveQRIY9nfy6xoR1uRYBtpZgI6339F5dgvm/e9B" crossorigin="anonymous">

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.3.5/jquery.fancybox.min.css"/>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.3.5/jquery.fancybox.min.js"></script>

  <link rel="stylesheet" href="css/table.css"></link>
  <link rel="stylesheet" href="css/side_bar.css"></link>
  <link rel="stylesheet" href="css/main.css"></link>

  <!-- Collapsable tab displaying tissue expression chart styling -->

</head>

<body>
  <!-- SIDE BAR CONTAING QUERY FORM START -->
  <div id="mySidenav" class="sidenav">
    <div class="container">
      <a class="closebtn" onclick="closeNav()" style="color: white" onclick="toggleSide()">&times</a>
      <br>
      <form class="form-horizontal" method="post" action="/results">
        <h3>Query Builder</h3>
        <div class="form-group">
          <label class="control-label col-sm-2" style="color: white">GENE</label>
          <div class="col-sm-10">
            <input class="form-control" id="gene" name="Probe" placeholder="Enter gene(s)" data-toggle="tooltip" data-placement="left" title="Seperate multiple genes with commas.">
          </div>
        </div>
        <div class="form-group">
          <label class="control-label col-sm-2" style="color: white">VARIANT</label>
          <div class="col-sm-10">
            <input class="form-control" id="variant" name="Variant" placeholder="Enter Variant(s)" data-toggle="tooltip" data-placement="left" title="Seperate multiple genotypes with commas.">
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-lg sharp" style="width:100%">EXECUTE</button>
          </div>
        </div>
      </form>
    </div>
  </div>
  <!-- SIDE BAR CONTAING QUERY FORM END -->


  <!-- SIDEBAR TOGGLE SCRIPT START -->
  <script>
    function toggleSide() {
      let side = document.getElementById("mySidenav");
      if (side.style.width === "250px") {
        side.style.width = "0px" // Close the sidenav if it was previously open.
      } else {
        side.style.width = "250px" // Open the sidenav if it was previously closed.
        side.style.borderRight = "2px solid black";
      }
    }

    function closeNav() {
      document.getElementById("mySidenav").style.width = "0";
    }
  </script>
  <!-- SIDEBAR TOGGLE SCRIPT END -->

  <!-- STICKY TOP NAVIGATION BAR START -->
  <nav class="navbar navbar-expand-sm navbar-dark bg-primary fixed-top" style="background-color: gray !important; border-bottom: 2px solid white">
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarText">
      <ul class="nav navbar-nav mr-auto">
        <li class="nav-item">
          <h2 style="color: white">FlyTED2</h2>
        </li>
      </ul>
      <ul class="nav navbar-nav">
        <li class="nav-item">
          <button type="button" class="btn btn-lg sharp" onclick="toggleSide()">SEARCH</button>
        </li>
      </ul>
      <ul class="navbar-nav ml-auto">
        <li class="nav-item">
          <a class="nav-link" href="/home">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/credits">Credits</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/cite">Liscence and Citing</a>
        </li>
      </ul>
    </div>
  </nav>
  <!-- STICKY TOP NAVIGATION BAR END -->

  <!-- GLOBAL VARIABLES DECLARATION START -->
  <script>
    var microarray_data_present = true; // Store whether microarray data has been retrieved or not.
    var tissue_expression_present = true; // Store whether flymine data has been retrieved or not.
    var image_data_present = true; // Store whether image data has been retrieved or not.
    var gene = "none"; // Stores gene id of curent loop.
    var data_array = []; // Holds the tissue expression data from flymine.
    var affy_array = []; // Holds the affy data from sql table 'Probe Annotations'.
  </script>
  <!-- GLOBAL VARIABLES DECLARATION END -->


  {{#each flyMineData}}

    <!-- CHECK IF DATA COMPONENTS AVAILABLE START -->
    <script>

      if ({{{json [affy]}}}.length == 0) {
        microarray_data_present = false;
        console.log("NO MICROARRAY DATA");
      }
      if ("{{[tissue]}}".length == 0) {
        tissue_expression_present = false;
        console.log("NO FLYMINE DATA");
      }
      if ("{{[flyted]}}".length == 0) {
        image_data_present = false;
        console.log("NO IMAGE DATA");
      }

    </script>
    <!-- CHECK IF DATA COMPONENTS AVAILABLE END -->


    <div class="content">
      <h1 style="background-color:#d4374a; color:white;">RESULT FOR GENE: {{[probe]}} <a href="http://flybase.org/reports/{{this.[tissue].[0].[9]}}" class="gene_link">Link To FlyBase Report For Gene</a></h1>
      <!-- Include flybase page for gene -->
      <br>

      <!---DISPLAY TRANSCRIPTS HEADER START -->
      <script>
        if ("{{[transcript]}}".length != 0) { // Display transcript title only when not empty.
          var probe_header = document.getElementsByTagName("div");
          var transcript_header = document.createElement("h2");
          var text = document.createTextNode("TRANSCRIPTS");
          transcript_header.style.color = "#d4374a";
          transcript_header.appendChild(text);
          probe_header[probe_header.length - 1].appendChild(transcript_header); // Append transcripts header to repective probe header.
        }
      </script>
      <!---DISPLAY TRANSCRIPTS HEADER END -->

      <!-- LOOP THGROUGH TRANSCRIPT DATA START -->
      {{#each [transcript]}}
        {{#with this}}
          <div class="tab" id="temp"></div>

          <!-- CREATE TAB BUTTON FOR TRANSCRIPT START -->
          <script>
            var transcript_button = document.getElementById('temp');
            var id = "{{[Transcript_ID]}}" + "_tab"; // Set the transcript tab equal to the transcript ID.
            transcript_button.setAttribute("id", id);
            transcript_button.classList.add('tab');
            transcript_button.innerHTML =
              ">> VIEW TRANSCRIPT VIEW INFORMATION FOR GENE: " + "{{[Transcript_ID]}}";

            transcript_button.onclick = function() { // When tab is clicked toggle view of the respective transcipt information.
              toggle_transcript_view("{{[Transcript_ID]}}" + "_container");
            };
          </script>
          <!-- CREATE TAB BUTTON FOR TRANSCRIPT END -->

          <!-- CREATE TRANSCRIPT CONTENTS CONTAINER START -->
          <div id="{{[Transcript_ID]}}_container" style="padding:2%; border: 2px solid black">
            <p>
              <font color='#d4374a'>Transcript Primary ID: </font> {{[Transcript_ID]}}
              <a href="http://flybase.org/reports/{{[Transcript_ID]}}" class="btn-link">Link To FlyBase Report For This Transcript</a>
              <!-- Include link to the FlyBase page dedicated to the repsective transcript -->
            </p>

            <p>
              <font color='#d4374a'>5' Sequence: </font>
              <span style="color: #660066; text-decoration: underline overline; font-weight: bold;">{{[5_Prime_Sequence]}}</span>
            </p>

            <p>
              <font color='#d4374a'>3' Sequence: </font>
              <span style="color: #009933; text-decoration: underline overline; font-weight: bold;">{{[3_Prime_Sequence]}}</span>
            </p>

            <p>
              <font color='#d4374a'>Probe Length: </font> {{[Target_Sequence_Length]}}
            </p>

            <h5 style="color:#d4374a">Probe Sequence</h5>
            <div id="{{[Transcript_ID]}}" wrap="hard" style="overflow-wrap: break-word; width:100%">
              {{[Target_Sequence]}}
            </div>
          </div>
          <!-- CREATE TRANSCRIPT CONTENTS CONTAINER END -->

          <!-- EDIT STYLE OF SEQUENCES TO SHOW 5' AND 3' PROBES START -->
          <script>
            var test = document.getElementById("{{[Transcript_ID]}}")
            var three = test.innerHTML.replace("{{[3_Prime_Sequence]}}", "");
            var res = three.replace("{{[5_Prime_Sequence]}}", "").trim();

            var final =
              '<span style="color: #660066; text-decoration: underline overline; font-weight: bold">' +
              "{{[5_Prime_Sequence]}}" +
              '</span>' + '<span>' + res + '</span>' +
              '<span style="color: #009933; text-decoration: underline overline; font-weight: bold;">' +
              "{{[3_Prime_Sequence]}}" + '</span>';

            document.getElementById("{{[Transcript_ID]}}").innerHTML = final;
            document.getElementById("{{[Transcript_ID]}}" + "_container").style.display = "none"; // Initially have transcripts hiddden.
          </script>
          <!-- EDIT STYLE OF SEQUENCES TO SHOW 5' AND 3' PROBES END -->
        {{/with}}
      {{/each}}
      <!-- LOOP THGROUGH TRANSCRIPT DATA END -->

      <br>

      <h2 style="color:#d4374a" id="{{probe}}_image_title">IMAGES AND THEIR DESCRIPTIONS</h2>

      <!-- Handle error when no image values present -->
      <script>
        if (!image_data_present) {
          var image_title = document.getElementById("{{probe}}" + "_image_title");
          image_title.innerHTML = "NO IMAGE DATA AVAILABLE!";
        }
      </script>

      <!-- LOOP THGROUGH SQL ANNOTAION ANDS IMAGES DATA START-->
      {{#each [flyted]}}
        <div class="square">
          <a class="contenta" data-fancybox="gallery" href="{{[link to file]}}" style="background: url('{{[link to file]}}'), url('image_error.bmp'); overflow: hidden; background-size: cover;  background-position: center"></a>

          <!-- Liscence for fancybox can be found on their site -> https://fancyapps.com/fancybox/3
          It is free to use fancyBox for your personal or non-profit website projects. This website is non-profit.
          fancybox is released under the GNU General Public License v3.0 -->

          <script>
            $("[data-fancybox]").fancybox({
              arrows: false,
              thumbs: {
                autoStart: true
              },
              buttons: [
                "close"
              ],
            });
          </script>

          {{#with this}}

            <!-- TABLE TO SHOW IMAGES AND RESPECTIVE ANNOTATIONS START -->
            <div class="contentb" style="overflow:auto">
              <table class="table table-bordered" style="position: relative; width:100%; height:100%; margin:0px">
                <tbody>
                  <tr>
                    <td class="key">Probe</td>
                    <td>{{[probe]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Slide Name</td>
                    <td>{{[slide name]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Genotype A</td>
                    <td>{{[genotype a]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Genotype B</td>
                    <td>{{[genotype b]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Stages Shown</td>
                    <td>{{[stages shown in picture]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Description</td>
                    <td>{{[description of staining pattern]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Apical/spermatogonia</td>
                    <td>{{[Apical/spermatogonia]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Germ-line</td>
                    <td>{{[Germ-line]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Somatic</td>
                    <td>{{[Somatic]}}</td>
                  </tr>
                  <tr>
                    <td class="key">Additional Comments</td>
                    <td>{{[comments]}}</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <!-- TABLE TO SHOW IMAGES AND RESPECTIVE ANNOTATIONS END -->
          {{/with}}
        </div>
        <br>
      {{/each}}

      <h2 style="color:#4286f4" id="microarray_{{[probe]}}">MICROARRAY GRAPH AND ANNOTATIONS</h2>

      <!-- TABLE TO SHOW ADDITIONAL PROBE ANNOTTAIONS FROM THE 'PROBE_ANNOTATIONS' TABLE IN SQL START -->
      <table id="annotation_for_{{[probe]}}" class="expression_table">
        <tbody>
          <tr>
            <td data-field="key" class="key">Gene</td>
            <td data-field="value"></td>
          </tr>
          <tr>
            <td data-field="key" class="key">Probe Set ID</td>
            <td data-field="value">
          </tr>
          <tr>
            <td data-field="key" class="key">Transcript ID</td>
            <td data-field="value"></td>
          </tr>
          <tr>
            <td data-field="key" class="key">Description</td>
            <td data-field="value"></td>
          </tr>
        </tbody>
      </table>
      <!-- TABLE TO SHOW ADDITIONAL PROBE ANNOTTAIONS FROM THE 'PROBE_ANNOTATIONS' TABLE IN SQL END -->

      <!-- CREATE THE CHART CONTAINER AND BUTTON FOR AFFY DATA START -->
      <script>
        if (microarray_data_present) {
          var gene = "{{[probe]}}";

          // Fetch previous table element:
          var items = document.querySelectorAll("table");
          var lastchild = items[items.length - 1];

          // Create button:
          var chart_affy_button = document.createElement('div');
          var id = "button_affy_" + gene;
          chart_affy_button.setAttribute("id", id);
          chart_affy_button.classList.add('tab2');
          chart_affy_button.innerHTML = ">> VIEW MICROARRAY DATA FOR GENE: " + gene;
          lastchild.parentNode.insertBefore(chart_affy_button, lastchild.nextSibling);
          document.getElementById(id).onclick = function() {
            affy_test(this.id);
          };

          // Create chart container:
          var chart_affy_element = document.createElement('div');
          var id = "chart_affy_" + gene;
          chart_affy_element.setAttribute("id", id);
          chart_affy_button.appendChild(chart_affy_element);
        }
      </script>
      <!-- CREATE THE CHART CONTAINER AND BUTTON FOR AFFY DATA END -->

      <!--CREATE FORM USED FOR SEARCHING AND SORTING THE TISSUE EXPRESSION TABLE START -->
      <h2 style="color: #d4374a" id="expression_title_{{[probe]}}">EXPRESSION IN TISSUES</h2>
      <div id="expression_form_{{[probe]}}" style="position:relative">
        <div class="form-inline">
          <label for="search">Search:</label>
          <input type="text" name="search" id="myInput" onkeyup="SearchTable(this.id)" placeholder="Search by Tissue" title="Filter Table" class="form-control" style="margin: 10px">
        </div>
        <div class="form-inline">
          <label style="margin:10px">Order:</label>
          <div class="btn-group btn-group-toggle" data-toggle="buttons">
            <label class="btn btn-lg sharp">
              <input type="radio" name="options" id="myButton_asc" autocomplete="off" onclick="sortTable(this.id, 'asc')"> Ascending
            </label>
            <label class="btn btn-lg sharp">
              <input type="radio" name="options" id="myButton_desc" autocomplete="off" onclick="sortTable(this.id, 'desc')"> Descending
            </label>
          </div>
        </div>
      </div>
      <!--CREATE FORM USED FOR SEARCHING AND SORTING THE TISSUE EXPRESSION TABLE END -->

      <br>

      <div style="position: relative; width: 100%; overflow: auto">

        <!-- CREATE TABLE TO CONTAIN TISSUE EXPRESSION RESULTS FROM FLYMIN API START -->
        <table id="myTable" style="width: 100%" class="expression_table">

          <!-- GIVE ID's TO TABLE AND FORM ELEMENTS START-->
          <script>
            // Change input id to match respective gene:
            var tochange = document.getElementById('myInput');
            tochange.id = "{{[probe]}}" + "_input";

            // Change table id to match respective gene:
            var tochangetwo = document.getElementById('myTable');
            tochangetwo.id = "{{[probe]}}" + "_table";

            // Change button sort id to match respective gene:
            var tochangethree = document.getElementById('myButton_asc');
            tochangethree.id = "{{[probe]}}" + "_button_asc";
            $("#" + tochangethree.id).change(() => {
              sortTable('{{[probe]}}', 'asc');
            });

            // Change button sort id to match respective gene:
            var tochangefour = document.getElementById('myButton_desc');
            tochangefour.id = "{{[probe]}}" + "_button_desc";
            $("#" + tochangefour.id).change(() => {
              sortTable('{{[probe]}}', 'desc');
            });
          </script>
          <!-- GIVE ID's TO TABLE AND FORM END -->

          <!-- DECLARE TABLE HEADERS START -->
          <tr>
            <th>Gene Secondary Identifier</th>
            <th>Gene Symbol</th>
            <th>mRNA Signal</th>
            <th>mRNA Signal SEM</th>
            <th>Present Call</th>
            <th>Enrichment</th>
            <th>Affy Call</th>
            <th>Data Source</th>
            <th>Tissue Name</th>
          </tr>
          <!-- DECLARE TABLE HEADERS END -->

          {{#with this}}

            <!-- CREATE ARRAYS FOR AFFY AND TISSUE EXPRESSION DATA START -->
            <script>
              // Metrics for tissue expression graph.
              var tissue_expression_dataset = [];
              tissue_expression_dataset.push(["Tissue Type", "Expression Count"]);

              // Metrics for affy expression graph
              var affy_expression_dataset = [];
              affy_expression_dataset.push(["Mutant", "Expression Count"]);
            </script>
            <!-- CREATE ARRAYS FOR AFFY AND TISSUE EXPRESSION DATA END -->

            {{#each [tissue]}}
              <!-- ADD EXPRESSION DATA TO ARRAY START -->
              <script>
                var temp = [];
                var tissue_type = "{{this.[8]}}";
                var expression_level = parseFloat("{{this.[3]}}");

                temp.push(tissue_type, expression_level);
                tissue_expression_dataset.push(temp);
              </script>
              <!-- ADD EXPRESSION DATA TO ARRAY END -->

              <!-- DECLARE TABLE BODY START -->
              <tr>
                <td>{{this.[0]}}<i class= {{this.[6]}} style="float: right"></td> <!-- Add class to display up/down arrow in relation to the rows affinity Property -->
              <td>{{this.[1]}}</td>
              <td>{{this.[2]}}</td>
              <td>{{this.[3]}}</td>
              <td>{{this.[4]}}</td>
              <td>{{this.[5]}}</td>
              <td>{{this.[6]}}</td>
              <td>{{this.[7]}}</td>
              <td>{{this.[8]}}</td>
            </tr>
            <!-- DECLARE TABLE BODY END -->
          {{/each}}


          <!-- Handle error when no table values present -->
          <script>
          if(!microarray_data_present){
            console.log("No microarray data available");
            var affy_title = document.getElementById("microarray_" + "{{[probe]}}");
            affy_title.innerHTML = ">> NO MICROARRAY DATA AVAILABLE!";
            microarray_data_present = false;
            document.getElementById("annotation_for_" + "{{[probe]}}").remove();

          }
          </script>





    <!-- POPULATE THE AFFY TABLE START -->
    <script>
      if (microarray_data_present) {

      var labels = []
      var affy_data = ({{{json [affy]}}}); // Triple brackets used to disable HTML encoding.
      var temp = []
      var labels = Object.keys(affy_data[0]);
      var affy_value =  Object.values(affy_data[0]);
      var description_table = document.getElementById("annotation_for_" + "{{[probe]}}");

      for(let i=4; i<labels.length; i++) {    // Retrieve affy values for graph data from susbset of array.
        var temp = [];
        temp.push(labels[i], affy_value[i]);
        affy_expression_dataset.push(temp);
      }

      for(let i = 0; i<3; i++){ // Fill description table with sql data from subset of array.
        description_table.rows[i].children[1].innerHTML = affy_value[i];
        description_table.rows[i].children[0].style.background = "#4286f4";
        description_table.rows[i].children[0].style.color = "white";
      }


      var desc_array = affy_value[3].split('/');  // Replace description / with , for better presentation.
      desc_array.shift();

      var desc = "";
      desc_array.forEach(function(element) {
        desc = desc + element.trim() + ", ";
      });

      description_table.rows[3].children[1].innerHTML = desc;
      description_table.rows[3].children[0].style.background = "#4286f4";
      description_table.rows[3].children[0].style.color = "white";
    }

    </script>
    <!-- POPULATE THE AFFY TABLE END -->

    <!-- STORE GRAPH VALUES FOR USE WHEN RESIZING GOOGLE CHART START -->
    <script>
      affy_array.push(gene, affy_expression_dataset); // Push the gene name and associated affy data.
      data_array.push(gene, tissue_expression_dataset); // Push the gene name and the asscoiated expression data.
    </script>
    <!-- STORE GRAPH VALUES FOR USE WHEN RESIZING GOOGLE CHART END -->

  {{/with}}
</table>


<!-- Handle error when no table values present -->
<script>
if(!tissue_expression_present){
  console.log("No tissue data available");
  var tissue_title = document.getElementById("expression_title_"+"{{[probe]}}");
  tissue_title.innerHTML = "NO EXPRESSION DATA AVAILABLE!";
  document.getElementById("{{[probe]}}" + "_table").remove(); // Remove tissue expression table.
  document.getElementById("expression_form_" + "{{[probe]}}").remove(); // Remove tissue expression form

}
</script>



<!-- CREATE TABLE TO CONTAIN TISSUE EXPRESSIOJN RESULTS FROM FLYMIN API END -->
</div>

  <!--CREATE THE CHART CONTAINER AND TAB BUTTON FOR TISSUE EXPRESSION CHART START -->
  <script>
  if(tissue_expression_present){
    var items = document.querySelectorAll("div");  // Fetch previous table element.
    var lastchild = items[items.length - 1];

    var chart_button = document.createElement('div'); // Create button.
    var id = gene;
    chart_button.setAttribute("id", id);
    chart_button.classList.add('tab');
    chart_button.innerHTML = ">> EXPRESSION BY TISSUE GRAPH FOR GENE: " + gene;
    lastchild.parentNode.insertBefore(chart_button, lastchild.nextSibling);
    document.getElementById(id).onclick = function() {
      test(this.id);
    };

    var chart_element = document.createElement('div');  // Create chart container.
    var id = "chart_" + gene;
    chart_element.setAttribute("id", id);
    chart_button.appendChild(chart_element);
  }
  </script>
  <!--CREATE THE CHART CONTAINER AND TAB BUTTON FOR TISSUE EXPRESSION CHART END -->
  <br>
</div>
{{/each}}

<!-- INITIATE GOOGLE CHARTS AND CALL DRAWING FUNCTIONS START -->
<script>
  var mine = [];
  var affy_mine = [];
  google.charts.load('current', {'packages': ['corechart']});
  google.charts.setOnLoadCallback(drawChart);

  function drawChart() {  // For each gene in the original query, draw the respective tissue expression and affy value graph.
    if (tissue_expression_present) {
      for (let i = 1; i < data_array.length; i = i + 2) {
        testing(data_array[i], data_array[i - 1]);
      }
    }
    if(microarray_data_present){
      for (let i = 1; i < affy_array.length; i = i + 2) {
        query_for_affy_chart(affy_array[i], affy_array[i - 1]);
      }
    }
  }
</script>
<!-- INITIATE GOOGLE CHARTS AND CALL DRAWING FUNCTIONS END -->

<!-- SET OPTIONS AND DRAW CHART FOR AFFY DATA START -->
<script>
  function query_for_affy_chart(affy_data, gene) {
    var data = google.visualization.arrayToDataTable(affy_data);
    var options = { // Set the options for the affy chart.
      legend: 'bottom',
      width: '100%',
      height: 800,
      title: 'Microarray Results for Different Mutants',
      colors: ['#4286f4'],
      hAxis: {
        title: 'Mutant',
        slantedText: true,
        slantedTextAngle: 90,
      },
      chartArea: {
        width: "82%",
        top: 28,
        height: '60%'
      },
      vAxis: {
        title: 'Expression Count',
        format: 'decimal',
        slantedText: true,
        slantedTextAngle: 90,
        sliceVisibilityThreshold: 0
      },
    };

    let id = "chart_affy_" + gene;
    console.log("Container id should be: " + id);
    var container = document.getElementById(id)
    var chart_affy = new google.visualization.ColumnChart(container);
    container.style.display = 'block';
    google.visualization.events.addListener(chart_affy, 'ready', () => {
      container.style.display = 'none'
    });

    affy_mine.push(gene, data, options);
    chart_affy.draw(data, options);
  }
</script>
<!-- SET OPTIONS AND DRAW CHART FOR AFFY DATA END -->

<!-- SET OPTIONS AND DRAW CHART FOR EXPRESSION DATA START -->
<script>
  function testing(data_array, gene) {
    var data = google.visualization.arrayToDataTable(data_array);
    var options = { // Set the options for the tissue chart.
      legend: 'bottom',
      width: '100%',
      height: 800,
      title: 'Gene Expression in Different Drosopilla Tissues',
      colors: ['#d4374a'],
      hAxis: {
        title: 'Tissue Type',
        slantedText: true,
        slantedTextAngle: 90,
      },
      chartArea: {
        width: "82%",
        top: 28,
        height: '60%'
      },
      vAxis: {
        title: 'Expression (mRNA Signal SEM)',
        format: 'short',
        slantedText: true,
        slantedTextAngle: 90,
        sliceVisibilityThreshold: 0
      },
    };

    let id = "chart_" + gene;
    var container = document.getElementById(id)
    var chart = new google.visualization.ColumnChart(container);
    container.style.display = 'block';
    google.visualization.events.addListener(chart, 'ready', () => {
      container.style.display = 'none'
    });

    mine.push(gene, data, options);
    chart.draw(data, options);
  }
</script>
<!-- SET OPTIONS AND DRAW CHART FOR EXPRESSION DATA END -->

</div>
</div>


<!-- FUNCTIONS TO TOGGLE DISPLAY OF CHARTS AND REDRAWING OF CHARTS ON PAGE RESIZE -->
<script>
  function test(element) {  // Toogle the display of the expression chart when the tab above the chart is clicked.
    var y = element.replace("chart_", "");
    var z = "chart_" + y;
    var x = document.getElementById(z);
    if (x.style.display === "none") {
      x.style.display = "block";
    } else {
      x.style.display = "none";
    }
  }

  function affy_test(element) { // Toogle the display of the affy chart when the tab above the chart is clicked.
    var y = element.replace("button_affy_", "chart_affy_");
    var x = document.getElementById(y);
    if (x.style.display === "none") {
      x.style.display = "block";
    } else {
      x.style.display = "none";
    }
  }

  function resize() { // When window is resized, redraw every expression chart to fit the new window dimensions.
    for (let i = 0; i < mine.length; i += 3) {
      let hidden_before = false;
      let thisChart = document.getElementById("chart_" + mine[i]);
      if (thisChart.style.display == "none") hidden_before = true;

      let chart = new google.visualization.ColumnChart(thisChart);
      thisChart.style.display = 'block';
      google.visualization.events.addListener(chart, 'ready', () => {
        if (hidden_before) thisChart.style.display = 'none'
      });
      chart.draw(mine[i + 1], mine[i + 2]);
    }
    resize_for_affy();
  }


  function resize_for_affy() {  // When window is resized, redraw every affy chart to fit the new window dimensions.
    for (let i = 0; i < affy_mine.length; i += 3) {
      let hidden_before = false;
      let thisChart = document.getElementById("chart_affy_" + mine[i]);
      if (thisChart.style.display == "none") hidden_before = true;

      let chart = new google.visualization.ColumnChart(thisChart);
      thisChart.style.display = 'block';
      google.visualization.events.addListener(chart, 'ready', () => {
        if (hidden_before) thisChart.style.display = 'none'
      });
      chart.draw(affy_mine[i + 1], affy_mine[i + 2]);
    }
  }

  window.onload = resize;
  window.onresize = resize;

</script>
<!-- FUNCTIONS TO TOGGLE DISPLAY OF CHARTS AND REDRAWING OF CHARTS ON PAGE RESIZE -->

  <!-- ADD ROW FILTERING TO BY TISSUE TO TISSUE EXPRESSION TABLE START -->
  <script>
    function SearchTable(id) {
      var table_id, input, filter, table, tr, td, i;
      input = document.getElementById(id);
      filter = input.value.toUpperCase();

      // Construct the table ID:
      table_id = id.replace('input', 'table');
      table = document.getElementById(table_id);
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[8];
        if (td) {
          if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
          } else {
            tr[i].style.display = "none";
          }
        }
      }
    }
  </script>
  <!-- ADD ROW FILTERING TO BY TISSUE TO TISSUE EXPRESSION TABLE END -->

  <!-- SORT THE TABLE IN ASCENDING/DESCENDING ORDER, CREDIT: W3C. START -->
  <script>
    function sortTable(gene, order) {
      var table, rows, switching, i, x, y, shouldSwitch;
      table = document.getElementById((gene + "_table"));
      switching = true;
      /*Make a loop that will continue until
      no switching has been done:*/
      while (switching) {
        //start by saying: no switching is done:
        switching = false;
        rows = table.getElementsByTagName("TR");
        /*Loop through all table rows (except the
        first, which contains table headers):*/
        for (i = 1; i < (rows.length - 1); i++) {
          //start by saying there should be no switching:
          shouldSwitch = false;
          /*Get the two elements you want to compare,
          one from current row and one from the next:*/
          x = rows[i].getElementsByTagName("TD")[3];
          y = rows[i + 1].getElementsByTagName("TD")[3];
          //check if the two rows should switch place:
          if ((order == 'asc') && (Number(x.innerHTML.toLowerCase()) < Number(y.innerHTML.toLowerCase())) ) {
            //if so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
          else if ((order == 'desc') && (Number(x.innerHTML.toLowerCase()) > Number(y.innerHTML.toLowerCase())) ) {
            //if so, mark as a switch and break the loop:
            shouldSwitch = true;
            break;
          }
        }
        if (shouldSwitch) {
          /*If a switch has been marked, make the switch
          and mark that a switch has been done:*/
          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
          switching = true;
        }
      }
    }
  </script>
  <!-- SORT THE TABLE IN ASCENDING/DESCENDING ORDER, CREDIT: W3C. END -->

  <!-- TOGGLE DISPOLAY OF TRANSCRIPT CONTENTS START -->
  <script>
  function toggle_transcript_view(transcript_id) {
    var x = document.getElementById(transcript_id);
    if (x.style.display === "none") {
      x.style.display = "block";
    } else {
      x.style.display = "none";
    }
  }
  </script>
<!-- TOGGLE DISPOLAY OF TRANSCRIPT CONTENTS END -->

    </div>
  </body>
</html>
